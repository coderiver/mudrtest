//points      : 1| 2| 3| 4| 5| 6| 7| 8| 9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|70|71|72|73|74|75|76|77|78|79|80|81|82|83|83|85|86|87|88|89|90|91|92|93|94|95|96
$pacman-X     : 0, 0, 1, 0,-1, 1, 0, 0, 1, 0, 1, 1, 0,-1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0,-1,-1, 0,-1, 0,-1, 1, 0, 0,-1, 0, 0,-1, 0,-1, 0, 0,-1, 1, 0,-1, 1, 0, 0, 1, 0,-1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,-1, 0, 0,-1, 0, 0,-1, 0,-1,-1, 0, 1, 1, 0, 0, 1,-1,-1, 0, 0, 1, 0
$pacman-Y     : 1, 1, 0, 1, 0, 0,-1,-1, 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 1, 1, 0,-1,-1, 1, 1, 0,-1, 1, 0, 0,-1, 0, 1, 0, 0, 1,-1, 0, 1,-1, 0, 1, 0,-1, 1, 0, 0, 1, 0, 0,-1, 1, 0, 1, 0, 1,-1, 0, 1, 0,-1,-1, 0, 1, 0,-1,-1, 0, 0, 1, 0, 1, 1, 0, 1,-1, 0, 1, 0, 0, 1, 0, 0, 1,-1, 0, 0, 0, 1, 1, 0, 1
$pacman-angle : 0,-1, 1, 1,-2,-1, 0, 1, 1,-1, 0,-1,-1, 2, 0, 0, 0, 1,-2, 1, 1, 0,-1,-1, 0, 2, 0, 1, 1,-2, 1, 0, 1,-1,-1, 1, 2, 1, 2,-1,-1, 2,-1,-1, 1, 1, 2, 1,-2, 1, 1,-2,-1, 2,-1, 1, 1,-1,-2, 1, 1,-1,-1, 0, 1, 1,-1,-1, 0, 1, 0, 1, 1,-1, 0, 1,-1, 2,-1,-1, 1, 0,-1,-1, 0, 1,-2, 1, 2, 0,-1, 0,-1, 1, 0

$pacman-step         : 30
$pacman-angle-step   : 90
$pacman-init-X       : 0
$pacman-init-Y       : 0
$pacman-init-angle   : 90
$pacman-steps-amount : length($pacman-X)
$pacman-anim-duration: 30s

$anim-step-dur: $pacman-anim-duration / $pacman-steps-amount

=move($X, $Y, $rotate)
  transform: translate3d(em($X),em($Y),0) rotateZ(#{$rotate}deg)

$draw-labirint-dur: 1s

.pacman-wrapper
  overflow: hidden

#pacman-labirint
  position: relative
  width: em(300)
  height: em(352)
  animation-fill-mode: backwards
  > svg
    width: 100%
    height: 100%

  #borders
    path
      stroke-dashoffset: 400
      stroke-dasharray: 400
      transition: stroke-dashoffset $draw-labirint-dur linear

  #main-line
    stroke-dashoffset: 2922
    stroke-dasharray: 2922

  // #red-ghost,
  // #green-ghost,
  // #blue-ghost,
  .red-ghost,
  .green-ghost,
  .blue-ghost,
  #dots
    opacity: 0
    // transition: opacity 1s linear

  .red-ghost,
  .green-ghost,
  .blue-ghost
    position: absolute
    z-index: 1

  .red-ghost
    fill: $error
    top: em(55)
    left: em(156)
  .green-ghost
    fill: $action
    top: em(86)
    left: em(277)
  .blue-ghost
    fill: $interactive
    top: em(145)
    left: em(37)



  .pacman
    position: absolute
    opacity: 0
    top: em(-2)
    left: em(7)
    z-index: 1
    transform-origin: 50% 50%
    animation-fill-mode: backwards
    transition: opacity 1s linear
    width: em(16)
    height: em(16)
    &:before,
    &:after
      content: ""
      position: absolute
      z-index: 1
      left: 0
      width: 100%
      height: 50%
      background: $alert
      overflow: hidden
    &:before
      top: 0
      border-radius: em(16) em(16) 0 0
      transform-origin: center bottom
    &:after
      bottom: 0
      border-radius: 0 0 em(16) em(16)
      transform-origin: center top

  &.pacman-load
    #borders
      path
        stroke-dashoffset: 0
        transition-delay: 0

  &.show-pacman
    // #red-ghost,
    // #green-ghost,
    // #blue-ghost,
    .red-ghost,
    .green-ghost,
    .blue-ghost,
    #dots
      opacity: 1
      transition: opacity $draw-labirint-dur linear $draw-labirint-dur

    #main-line
      animation: hide-dots $pacman-anim-duration linear 1 $draw-labirint-dur

    .pacman
      opacity: 1
      transition-delay: $draw-labirint-dur
      animation: pacman-move $pacman-anim-duration linear 1 $draw-labirint-dur
      &:before
        animation: pacman-top 0.4s ease infinite $draw-labirint-dur
      &:after
        animation: pacman-bottom 0.4s ease infinite $draw-labirint-dur

    // #red-ghost
    .red-ghost
      animation: red-ghost ($anim-step-dur * 6) linear infinite ($draw-labirint-dur + $anim-step-dur * -2)

    // #blue-ghost
    .blue-ghost
      animation: blue-ghost ($anim-step-dur * 8) linear infinite ($draw-labirint-dur - $anim-step-dur)

    // #green-ghost
    .green-ghost
      animation: green-ghost ($anim-step-dur * 6) linear infinite ($draw-labirint-dur + $anim-step-dur)

  &.change-labirint
    animation: change-labirint 2s linear
    .pacman
      opacity: 0
    #dots
      opacity: 0


@keyframes change-labirint
  0%, 100%
    transform: translateY(0)
    opacity: 1
  50%
    transform: translateY(-100%)
    opacity: 0
  50.1%
    transform: translateY(100%)

@keyframes hide-dots
  0%
    stroke-dashoffset: 2922
  100%
    stroke-dashoffset: 0


@keyframes red-ghost
  0%, 100%
    transform: translate3d(0,0,0)
  // 16.66%
  33.33%
    transform: translate3d(0,em(60),0)
  // 49.99%
  66.66%
    transform: translate3d(0,0,0)
  83.32%
    transform: translate3d(em(30),0,0)


@keyframes blue-ghost
  0%, 100%
    transform: translate3d(0,0,0)
  // 0%
  // 12.5%
  25%
    transform: translate3d(em(60),0,0)
  // 37.5%
  50%
    transform: translate3d(em(60),em(60),0)
  // 62.5%
  75%
    transform: translate3d(em(60),0,0)
  // 87.5%

@keyframes green-ghost
  0%, 100%
    transform: translate3d(0,0,0)
  50%
    transform: translate3d(em(-90),0,0)


@keyframes pacman-top
  to
    transform: rotate(-40deg)


@keyframes pacman-bottom
  to
    transform: rotate(40deg)


@keyframes pacman-move
  0%
    transform: translate3d(0, 0, 0) rotateZ(#{$pacman-init-angle}deg)

  @for $i from 1 through $pacman-steps-amount

    $point             : percentage($i/$pacman-steps-amount)

    $posX              : $pacman-init-X + $pacman-step * nth($pacman-X, $i)
    $posY              : $pacman-init-Y + $pacman-step * nth($pacman-Y, $i)
    $pacman-init-X     : $posX
    $pacman-init-Y     : $posY

    $need-rotation     : nth($pacman-angle, $i)
    $angle             : $pacman-init-angle + $pacman-angle-step * $need-rotation

    @if $need-rotation != 0
      #{$point}
        transform: translate3d(em($posX), em($posY), 0) rotateZ(#{$pacman-init-angle}deg)
      #{($point + 0.01%)}
        transform: translate3d(em($posX), em($posY), 0) rotateZ(#{$angle}deg)

    @else
      #{$point}
        transform: translate3d(em($posX), em($posY), 0) rotateZ(#{$angle}deg)

    $pacman-init-angle : $angle